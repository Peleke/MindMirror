[tox]
envlist = check-format,type,lint,py312
isolated_build = True

[testenv]
description = run unit tests
passenv = DOCKER_CONFIG
setenv =
    DATABASE_URL=postgresql://test:test@localhost:5432/test_users_db
    SUPABASE_URL=https://test.supabase.co
    SUPABASE_KEY=test-key
    PRACTICES_SERVICE_URL=http://localhost:8002
    FITNESS_SERVICE_URL=http://localhost:8003
    MEALS_SERVICE_URL=http://localhost:8004
    SHADOW_BOXING_SERVICE_URL=http://localhost:8005
    PROGRAMS_SERVICE_URL=http://localhost:8006
    HTTP_PORT=8001
deps =
    poetry
commands =
    poetry install --no-interaction
    poetry run pytest {posargs:tests -v}
basepython = python3.12

[testenv:isort]
description = sort imports with isort
skip_install = True
deps =
    poetry
commands =
    poetry install --no-interaction
    poetry run isort {posargs:.}

[testenv:format]
description = format code with black
skip_install = True
deps =
    poetry
commands =
    poetry install --no-interaction
    poetry run black {posargs:.}

[testenv:check-format]
description = check code formatting with black
deps =
    poetry
commands =
    poetry install --no-interaction
    poetry run black {posargs:. --check}

[testenv:type]
description = type checking with mypy
skip_install = True
deps =
    poetry
commands =
    poetry install --no-interaction
    poetry run mypy {posargs:.}

[testenv:lint]
description = lint code with flake8
skip_install = True
deps =
    poetry
commands =
    poetry install --no-interaction
    poetry run flake8 {posargs:.}

[coverage:run]
branch = True
source = .
omit =
    */tests/*
    */test_*.py
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError 