# Cloud Run v2 Migration Example for Practices Service
# Key differences from v1:
# - Resource: google_cloud_run_v2_service (vs google_cloud_run_service)
# - Structure: Flatter, more organized
# - Volume mounts: Native support for secrets/config as volumes
# - Environment: Can reference secrets directly via secret_key_ref

terraform {
  required_providers {
    google = {
      source  = "hashicorp/google"
      version = ">= 5.0"  # v2 requires provider >= 5.0
    }
  }
}

resource "google_cloud_run_v2_service" "practices" {
  name     = var.service_name
  location = var.region
  project  = var.project_id

  template {
    # Execution environment
    service_account = var.service_account_email

    # Scaling configuration
    scaling {
      min_instance_count = 1
      max_instance_count = 10
    }

    # Volume definitions (for secrets/config)
    # Example: Mount secrets as files
    volumes {
      name = "database-secret"
      secret {
        secret       = "DATABASE_URL"  # Secret Manager secret name
        default_mode = 0444  # Read-only
        items {
          version = "latest"
          path    = "database_url"  # File name in mount
          mode    = 0400
        }
      }
    }

    # Container configuration
    containers {
      name  = "practices-api"
      image = var.image

      ports {
        name           = "http1"
        container_port = 8000
      }

      # Resource limits (v2 syntax)
      resources {
        limits = {
          cpu    = "1000m"  # v2 uses millicpu notation
          memory = "512Mi"
        }
        cpu_idle = true  # Allow CPU throttling when idle
        startup_cpu_boost = false
      }

      # Environment variables (regular)
      env {
        name  = "API_VERSION"
        value = "0.1.0"
      }

      # Environment from Secret Manager (NEW in v2)
      env {
        name = "DATABASE_URL"
        value_source {
          secret_key_ref {
            secret  = "DATABASE_URL"
            version = "latest"
          }
        }
      }

      # Dynamic environment variables from var.env
      dynamic "env" {
        for_each = var.env
        content {
          name  = env.key
          value = env.value
        }
      }

      # Volume mounts (mount secrets as files)
      volume_mounts {
        name       = "database-secret"
        mount_path = "/secrets"  # Mounts to /secrets/database_url
      }

      # Startup/liveness/readiness probes (NEW in v2)
      startup_probe {
        http_get {
          path = "/health"
          port = 8000
        }
        initial_delay_seconds = 10
        timeout_seconds       = 3
        period_seconds        = 10
        failure_threshold     = 3
      }

      liveness_probe {
        http_get {
          path = "/health"
          port = 8000
        }
        initial_delay_seconds = 30
        timeout_seconds       = 3
        period_seconds        = 30
        failure_threshold     = 3
      }
    }

    # Max concurrent requests per instance
    max_instance_request_concurrency = 20

    # Timeout
    timeout = "300s"

    # VPC Access (if using VPC connector)
    # vpc_access {
    #   connector = "projects/${var.project_id}/locations/${var.region}/connectors/my-connector"
    #   egress    = "PRIVATE_RANGES_ONLY"
    # }
  }

  # Traffic routing
  traffic {
    type    = "TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST"
    percent = 100
  }

  # Annotations (v2 uses labels instead of some metadata annotations)
  labels = {
    managed-by = "terraform"
    service    = "practices"
    env        = var.environment
  }
}

# IAM - Same as v1 but uses v2 resource reference
resource "google_cloud_run_v2_service_iam_member" "public_access" {
  location = google_cloud_run_v2_service.practices.location
  project  = google_cloud_run_v2_service.practices.project
  name     = google_cloud_run_v2_service.practices.name
  role     = "roles/run.invoker"
  member   = "allUsers"
}

# Output URL
output "service_url" {
  value = google_cloud_run_v2_service.practices.uri
}
