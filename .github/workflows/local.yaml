name: Local Build Test

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Service to build (agent_service, journal_service, celery-worker, mesh, all)"
        required: true
        default: "all"

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      # Default production service URLs (can be overridden)
      JOURNAL_SERVICE_URL: https://journal-service-3858903851.us-east4.run.app
      AGENT_SERVICE_URL: https://agent-service-3858903851.us-east4.run.app

    steps:
      - uses: actions/checkout@v4

      - name: Select Build Target
        id: select
        run: |
          echo "service=${{ github.event.inputs.service }}" >> $GITHUB_ENV
          echo "tag=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Docker build agent_service
        if: env.service == 'agent_service' || env.service == 'all'
        run: |
          docker build -t us-east4-docker.pkg.dev/mindmirror-69/mindmirror/agent_service:${{ env.tag }} -f src/agent_service/Dockerfile .

      - name: Docker build journal_service
        if: env.service == 'journal_service' || env.service == 'all'
        run: |
          docker build -t us-east4-docker.pkg.dev/mindmirror-69/mindmirror/journal_service:${{ env.tag }} -f src/journal_service/Dockerfile .

      - name: Docker build habits_service (prod deps)
        if: env.service == 'habits_service' || env.service == 'all'
        run: |
          docker build \
            --build-arg BUILD_WITH_DEV=false \
            -t us-east4-docker.pkg.dev/mindmirror-69/mindmirror/habits_service:${{ env.tag }} \
            -f habits_service/Dockerfile .

      - name: Docker build celery-worker
        if: env.service == 'celery-worker' || env.service == 'all'
        run: |
          docker build -t us-east4-docker.pkg.dev/mindmirror-69/mindmirror/celery-worker:${{ env.tag }} -f celery-worker/Dockerfile .

      - name: Build supergraph with mesh-compose
        if: env.service == 'mesh' || env.service == 'all'
        run: |
          # Build the mesh-compose image
          docker build \
            -f mesh/Dockerfile.mesh-compose \
            -t us-east4-docker.pkg.dev/mindmirror-69/mindmirror/mesh-compose:${{ env.tag }} \
            ./mesh
            
          # Run the container to generate the supergraph, saving it to the local filesystem
          docker run --rm \
            -v $(pwd)/mesh/build:/app/build \
            --env JOURNAL_SERVICE_URL=${JOURNAL_SERVICE_URL:-https://journal-service-3858903851.us-east4.run.app} \
            --env AGENT_SERVICE_URL=${AGENT_SERVICE_URL:-https://agent-service-3858903851.us-east4.run.app} \
            us-east4-docker.pkg.dev/mindmirror-69/mindmirror/mesh-compose:${{ env.tag }} \
            npx mesh-compose -c mesh.config.dynamic.ts -o build/supergraph.graphql

      - name: Docker build mesh (with generated supergraph)
        if: env.service == 'mesh' || env.service == 'all'
        run: |
          # Build the final mesh container with the production supergraph now available locally
          docker build -t us-east4-docker.pkg.dev/mindmirror-69/mindmirror/mesh:${{ env.tag }} -f mesh/Dockerfile ./mesh
