#!/usr/bin/env bash
# scripts/generate-tfvars.sh
# Generates auto.tfvars files for Terrateam deployments
# Usage: ./scripts/generate-tfvars.sh <environment> <version_tag>
# Example: ./scripts/generate-tfvars.sh staging v1.2.0-abc1234

set -euo pipefail

ENVIRONMENT="$1"  # staging or production
VERSION_TAG="$2"  # e.g., v1.2.0-abc1234

# Configuration per environment
case "$ENVIRONMENT" in
    staging)
        PROJECT_ID="mindmirror-staging"
        PROJECT_NUM_ID="TBD"  # Update with actual staging project number
        REGISTRY="us-east4-docker.pkg.dev/mindmirror-staging/mindmirror"
        ENV_NAME="staging"
        LOG_LEVEL="DEBUG"
        DEBUG="true"
        ;;
    production)
        PROJECT_ID="mindmirror-69"
        PROJECT_NUM_ID="3858903851"
        REGISTRY="us-east4-docker.pkg.dev/mindmirror-69/mindmirror"
        ENV_NAME="production"
        LOG_LEVEL="INFO"
        DEBUG="false"
        ;;
    *)
        echo "Error: Invalid environment '$ENVIRONMENT'"
        echo "Usage: $0 <staging|production> <version_tag>"
        exit 1
        ;;
esac

# Generate timestamp
TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
GIT_SHA=$(git rev-parse HEAD)

# Generate tfvars
cat <<EOF
# Auto-generated by GitHub Actions
# DO NOT EDIT MANUALLY
# Generated at: ${TIMESTAMP}
# Git SHA: ${GIT_SHA}
# Version: ${VERSION_TAG}

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Project Configuration
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
project_id           = "${PROJECT_ID}"
project_numerical_id = "${PROJECT_NUM_ID}"
region               = "us-east4"
gcs_bucket_name      = "traditions-${PROJECT_ID}"

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Environment Configuration
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
environment = "${ENV_NAME}"
log_level   = "${LOG_LEVEL}"
debug       = "${DEBUG}"

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Container Images (Auto-Updated)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
journal_service_container_image = "${REGISTRY}/journal_service:${VERSION_TAG}"
agent_service_container_image   = "${REGISTRY}/agent_service:${VERSION_TAG}"
gateway_container_image         = "${REGISTRY}/mesh:${VERSION_TAG}"
celery_worker_container_image   = "${REGISTRY}/celery-worker:${VERSION_TAG}"
habits_service_container_image  = "${REGISTRY}/habits_service:${VERSION_TAG}"
meals_image                     = "${REGISTRY}/meals_service:${VERSION_TAG}"
users_image                     = "${REGISTRY}/users_service:${VERSION_TAG}"
movements_image                 = "${REGISTRY}/movements_service:${VERSION_TAG}"
practices_image                 = "${REGISTRY}/practices_service:${VERSION_TAG}"

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Static Configuration
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Mesh fallbacks
faux_mesh_supabase_id = "00000000-0000-0000-0000-000000000002"
faux_mesh_user_id     = "00000000-0000-0000-0000-000000000001"

# Program templates
uye_program_template_id              = "be925a11-edfa-4208-9924-d0ecae956aac"
mindmirror_program_template_id       = "1b4fa08a-462b-445e-85a6-6da4d70c6ed"
daily_journaling_program_template_id = "1b4fa08a-462b-445e-85a6-6da4d70c6ed"

# Meals service configuration
meals_env = {
  OFF_SEARCHALICIOUS_ENABLED = "true"
  OFF_USER_AGENT             = "MindMirrorMeals/1.0 (+support@mindmirror.app)"
}
EOF
